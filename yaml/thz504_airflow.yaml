defaults:
  interval: $interval_very_slow
  delta: "10%"
  target: "Kessel"
  unit_of_measurement: "mÂ³/h"

sensor:
  - platform: template
    name: ${property}
    id: ${property}
    unit_of_measurement: ${unit_of_measurement}
    icon: "mdi:pump"
    accuracy_decimals: 0
    update_interval: ${interval}
    filters:
      - or:
        - throttle: ${interval}
        - delta: ${delta}
    lambda: |-
      queueRequest(${target}, Property::k${property});
      return {};

esphome:
  on_boot:
    priority: -100
    then:
      - lambda: |-
          CallbackHandler::instance().addCallback(std::make_pair(${target},Property::k${property}),[](const SimpleVariant& value){
              using type = TypeMapping<Property::k${property}>::type;
              id(${property}).publish_state(value.get<type>());
          });
          queueRequest(${target}, Property::k${property});
