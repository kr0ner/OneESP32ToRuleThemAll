esphome:
  platformio_options:
    build_flags:
      - "-DTHZ_404"

packages:
  COMMON: !include { file: common.yaml }
  BASE:   !include { file: wp_base.yaml }

  SOMMERBETRIEB_HYSTERESE:    !include { file: wp_temperature.yaml, vars: { property: "SOMMERBETRIEB_HYSTERESE", interval: $interval_slow }}
  HEISSGAS_TEMP:              !include { file: wp_temperature.yaml, vars: { property: "HEISSGAS_TEMP", interval: $interval_slow }}
  VERFLUESSIGER_TEMP:         !include { file: wp_temperature.yaml, vars: { property: "VERFLUESSIGER_TEMP", interval: $interval_slow }}

  DRUCK_HEIZKREIS:            !include { file: wp_generic.yaml, vars: { property: "DRUCK_HEIZKREIS", unit: "bar", icon: "mdi:gauge", accuracy_decimals: "1" }}
  AKTIVE_HEIZSTUFEN:          !include { file: wp_generic.yaml, vars: { property: "AKTIVE_HEIZSTUFEN", interval: $interval_medium, icon: "mdi:heat-pump-outline"}}
  LAUFZEIT_FILTER_TAGE:       !include { file: wp_generic.yaml, vars: { property: "LAUFZEIT_FILTER_TAGE", icon: "mdi:air-filter", unit: "d", update_interval: $interval_once_in_a_while }}
  LAUFZEIT_VERDICHTER_HEIZEN: !include { file: wp_generic.yaml, vars: { property: "LAUFZEIT_VERDICHTER_HEIZEN", icon: "mdi:calendar-clock", interval: $interval_slow }}
  LAUFZEIT_VERDICHTER_WW:     !include { file: wp_generic.yaml, vars: { property: "LAUFZEIT_VERDICHTER_WW", icon: "mdi:calendar-clock", interval: $interval_slow }}
  LAUFZEIT_NHZ_HEIZEN:        !include { file: wp_generic.yaml, vars: { property: "LAUFZEIT_NHZ_HEIZEN", icon: "mdi:calendar-clock", interval: $interval_slow }}
  LAUFZEIT_NHZ_WW:            !include { file: wp_generic.yaml, vars: { property: "LAUFZEIT_NHZ_WW", icon: "mdi:calendar-clock", interval: interval_slow }}

globals:
  - id: sommermodus_state
    type: bool
    restore_value: yes
    initial_value: 'false'

binary_sensor:
  - platform: template
    name: "SOMMERMODUS"
    id: SOMMERMODUS
    lambda: |-
      if (id(AUSSENTEMP).state >= (id(SOMMERBETRIEB_TEMP).state + id(SOMMERBETRIEB_HYSTERESE).state)) {
        id(sommermodus_state) = true;
      } else if (id(AUSSENTEMP).state <= (id(SOMMERBETRIEB_TEMP).state - id(SOMMERBETRIEB_HYSTERESE).state)) {
        id(sommermodus_state) = false;
      }
      return id(sommermodus_state);

sensor:
  - platform: template
    name: "HEIZKREIS_DIFF"
    id: HEIZKREIS_DIFF
    icon: "mdi:swap-vertical"
    state_class: "measurement"
    accuracy_decimals: 1
    lambda: |-
      return (id(RUECKLAUFISTTEMP).state - id(VORLAUFSOLLTEMP).state);

button:
  - platform: template
    name: "Reset Filter"
    on_press:
        lambda: |-
            sendData(Kessel, Property::kRESET_FILTER, 1U);
